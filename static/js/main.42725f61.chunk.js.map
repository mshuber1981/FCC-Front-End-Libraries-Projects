{"version":3,"sources":["features/quotes/quotesSlice.js","components/NavBar.js","pages/Home.js","features/quotes/Quotes.js","pages/QuoteMachine.js","pages/NotFound.js","components/Routes.js","components/Footer.js","App.js","app/store.js","index.js"],"names":["quotesSlice","createSlice","name","initialState","loading","hasErrors","quote","author","quoteData","randomQuoteData","reducers","getQuotes","state","getQuotesSuccess","payload","getQuotesFailure","getRandomQuotes","quotes","Math","floor","random","length","actions","quotesSelector","NavBar","Navbar","collapseOnSelect","bg","variant","expand","fixed","Toggle","className","aria-controls","Collapse","Nav","exact","to","Link","Home","href","Button","size","Quotes","dispatch","useDispatch","useSelector","Jumbotron","id","onClick","QuoteMAchine","NotFound","Routes","path","component","QuoteMachine","Footer","App","useEffect","a","fetch","then","result","json","response","configureStore","reducer","quotesReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.42725f61.chunk.js","sourcesContent":["// https://redux-toolkit.js.org/api/createSlice#createslice\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const quotesSlice = createSlice({\r\n  name: \"quotes\",\r\n  initialState: {\r\n    loading: false,\r\n    hasErrors: false,\r\n    quote: \"\",\r\n    author: \"\",\r\n    quoteData: {},\r\n    randomQuoteData: {},\r\n  },\r\n  reducers: {\r\n    getQuotes: (state) => {\r\n      state.loading = true;\r\n    },\r\n    getQuotesSuccess: (state, { payload }) => {\r\n      state.quoteData = payload;\r\n      state.loading = false;\r\n      state.hasErrors = false;\r\n    },\r\n    getQuotesFailure: (state) => {\r\n      state.loading = false;\r\n      state.hasErrors = true;\r\n    },\r\n    getRandomQuotes: (state) => {\r\n      state.randomQuoteData =\r\n        state.quoteData.quotes[\r\n          Math.floor(Math.random() * state.quoteData.quotes.length)\r\n        ];\r\n      state.quote = state.randomQuoteData.quote;\r\n      state.author = state.randomQuoteData.author;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getQuotes,\r\n  getQuotesSuccess,\r\n  getQuotesFailure,\r\n  getRandomQuotes,\r\n} = quotesSlice.actions;\r\n\r\nexport const quotesSelector = (state) => state.quotes;\r\n\r\nexport default quotesSlice.reducer;\r\n\r\nexport const fetchQuotes = () => {\r\n  return async (dispatch) => {\r\n    dispatch(getQuotes());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\r\n      ).then((result) => result.json());\r\n\r\n      dispatch(getQuotesSuccess(response));\r\n      dispatch(getRandomQuotes());\r\n    } catch (error) {\r\n      dispatch(getQuotesFailure());\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\n// https://www.npmjs.com/package/react-router-bootstrap\nimport { LinkContainer } from \"react-router-bootstrap\";\n// https://react-bootstrap.github.io/components/navbar/\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nconst NavBar = () => {\n  return (\n    <header>\n      <Navbar\n        collapseOnSelect\n        bg=\"primary\"\n        variant=\"dark\"\n        expand=\"xl\"\n        fixed=\"top\"\n      >\n        <Navbar.Toggle className=\"ml-5\" aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav className=\"ml-5\">\n            <LinkContainer exact to=\"/\">\n              <Nav.Link>Home</Nav.Link>\n            </LinkContainer>\n            <LinkContainer exact to=\"/Quote-Machine\">\n              <Nav.Link>Quote Machine</Nav.Link>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n// https://react-bootstrap.github.io/components/jumbotron/\nimport { Button } from \"react-bootstrap\";\n// https://react-icons.netlify.com/#/\nimport { FaFreeCodeCamp } from \"react-icons/fa\";\n\nconst Home = () => {\n  return (\n    <section className=\"container\">\n      <div className=\"d-flex flex-column vh-100 align-items-center justify-content-center text-center bg-light\">\n        <h1 className=\"display-4\">Welcome!</h1>\n        <p className=\"my-5\">\n          Thanks for checking out my spin on the{\" \"}\n          <a href=\"https://www.freecodecamp.org/\">freecodecamp.org</a> Front End\n          Libraries Projects.\n        </p>\n        <a href=\"https://www.freecodecamp.org/mshuber1981\">\n          <Button size=\"lg\">\n            <FaFreeCodeCamp className=\"mr-2\" /> FCC Profile\n          </Button>\n        </a>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n// https://react-bootstrap.github.io/components/jumbotron/\nimport { Button, Jumbotron } from \"react-bootstrap\";\n// https://react-redux.js.org/api/hooks#using-hooks-in-a-react-redux-app\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRandomQuotes, quotesSelector } from \"./quotesSlice\";\n// https://react-icons.netlify.com/#/\nimport { FaTwitterSquare } from \"react-icons/fa\";\n\nconst Quotes = () => {\n  const dispatch = useDispatch();\n  const { quote, author, loading, hasErrors } = useSelector(quotesSelector);\n\n  if (loading) return <h2>Loading Quotes...</h2>;\n  if (hasErrors) return <h2>Something went wrong...</h2>;\n\n  return (\n    <section className=\"container\">\n      <Jumbotron id=\"quote-box\">\n        <blockquote>\n          <p id=\"text\" className=\"h5\">\n            {quote}\n          </p>\n          <footer id=\"author\" className=\"my-4\">\n            â€” {author}\n          </footer>\n        </blockquote>\n\n        <Button\n          id=\"new-quote\"\n          variant=\"primary\"\n          onClick={() => dispatch(getRandomQuotes())}\n        >\n          Random Quote\n        </Button>\n        <a\n          id=\"tweet-quote\"\n          className=\"d-block mt-4 h1\"\n          href={`https://twitter.com/intent/tweet?text=\"${quote}\"%20-${author}`}\n        >\n          <FaTwitterSquare />\n        </a>\n      </Jumbotron>\n    </section>\n  );\n};\n\nexport default Quotes;\n","import React from \"react\";\nimport Quotes from \"../features/quotes/Quotes\";\n\nconst QuoteMAchine = () => {\n  return (\n    <section className=\"container\">\n      <div className=\"d-flex flex-column vh-100 align-items-center justify-content-center text-center bg-light\">\n        <Quotes />\n      </div>\n    </section>\n  );\n};\n\nexport default QuoteMAchine;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <h1 className=\"d-flex flex-column vh-100 align-items-center justify-content-center text-white\">\n      Sorry, page not found.\n    </h1>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\n// https://reactrouter.com/web/guides/quick-start\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport QuoteMachine from \"../pages/QuoteMachine\";\nimport NotFound from \"../pages/NotFound\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/Quote-Machine\" component={QuoteMachine} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\n// https://react-icons.netlify.com/#/\nimport { FaLinkedin, FaGithubSquare, FaFreeCodeCamp } from \"react-icons/fa\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"d-flex flex-column fixed-bottom align-items-center bg-primary\">\n      <div className=\"h1 d-inline my-2\">\n        <a\n          href=\"https://www.linkedin.com/in/michael-huber-9b567a173\"\n          className=\"text-white\"\n        >\n          <FaLinkedin />\n        </a>\n        <a\n          href=\"https://www.freecodecamp.org/mshuber1981\"\n          className=\"mx-5 text-white\"\n        >\n          <FaFreeCodeCamp />\n        </a>\n        <a href=\"https://github.com/mshuber1981\" className=\"text-white\">\n          <FaGithubSquare />\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchQuotes } from \"./features/quotes/quotesSlice\";\nimport NavBar from \"./components/NavBar\";\nimport Routes from \"./components/Routes\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchQuotes());\n  }, [dispatch]);\n\n  return (\n    <>\n      <NavBar />\n      <main className=\"bg-secondary\">\n        <Routes />\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","// https://redux-toolkit.js.org/api/configureStore#configurestore\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport quotesReducer from \"../features/quotes/quotesSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    quotes: quotesReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// https://reactrouter.com/web/guides/quick-start (using HashRouter so custom 404 will work with GitHub Pages)\nimport { HashRouter as Router } from \"react-router-dom\";\n// https://getbootstrap.com/docs/4.5/getting-started/introduction/\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport store from \"./app/store\";\n// https://redux.js.org/tutorials/essentials/part-1-overview-concepts\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}