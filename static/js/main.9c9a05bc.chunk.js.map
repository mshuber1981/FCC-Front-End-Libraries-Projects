{"version":3,"sources":["features/quotes/quotesSlice.js","components/NavBar.js","pages/Home.js","features/quotes/Quotes.js","pages/QuoteMachine.js","features/markdown/markdownSlice.js","features/markdown/Markdown.js","pages/MarkdownPrev.js","pages/NotFound.js","components/Routes.js","components/Footer.js","App.js","app/store.js","index.js"],"names":["quotesSlice","createSlice","name","initialState","loading","hasErrors","quote","author","quoteData","randomQuoteData","reducers","getQuotes","state","getQuotesSuccess","payload","getQuotesFailure","getRandomQuotes","quotes","Math","floor","random","length","actions","quotesSelector","NavBar","Navbar","collapseOnSelect","bg","variant","expand","fixed","Toggle","className","aria-controls","Collapse","Nav","exact","to","Link","Home","Jumbotron","href","Button","size","Quotes","dispatch","useDispatch","useSelector","id","onClick","QuoteMAchine","markdownSlice","markdown","handleMarkdownChange","target","value","markdownSelector","Markdown","marked","setOptions","breaks","Row","Col","lg","onChange","event","type","dangerouslySetInnerHTML","__html","MarkdownPrev","NotFound","Routes","path","component","QuoteMachine","Footer","App","useEffect","a","fetch","then","result","json","response","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","reducer","quotesReducer","markdownReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.9c9a05bc.chunk.js","sourcesContent":["// https://redux-toolkit.js.org/api/createSlice#createslice\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const quotesSlice = createSlice({\r\n  name: \"quotes\",\r\n  initialState: {\r\n    loading: false,\r\n    hasErrors: false,\r\n    quote: \"\",\r\n    author: \"\",\r\n    quoteData: {},\r\n    randomQuoteData: {},\r\n  },\r\n  reducers: {\r\n    getQuotes: (state) => {\r\n      state.loading = true;\r\n    },\r\n    getQuotesSuccess: (state, { payload }) => {\r\n      state.quoteData = payload;\r\n      state.loading = false;\r\n      state.hasErrors = false;\r\n    },\r\n    getQuotesFailure: (state) => {\r\n      state.loading = false;\r\n      state.hasErrors = true;\r\n    },\r\n    getRandomQuotes: (state) => {\r\n      state.randomQuoteData =\r\n        state.quoteData.quotes[\r\n          Math.floor(Math.random() * state.quoteData.quotes.length)\r\n        ];\r\n      state.quote = state.randomQuoteData.quote;\r\n      state.author = state.randomQuoteData.author;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getQuotes,\r\n  getQuotesSuccess,\r\n  getQuotesFailure,\r\n  getRandomQuotes,\r\n} = quotesSlice.actions;\r\n\r\nexport const quotesSelector = (state) => state.quotes;\r\n\r\nexport default quotesSlice.reducer;\r\n\r\nexport const fetchQuotes = () => {\r\n  return async (dispatch) => {\r\n    dispatch(getQuotes());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\r\n      ).then((result) => result.json());\r\n\r\n      dispatch(getQuotesSuccess(response));\r\n      dispatch(getRandomQuotes());\r\n    } catch (error) {\r\n      dispatch(getQuotesFailure());\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\n// https://www.npmjs.com/package/react-router-bootstrap\nimport { LinkContainer } from \"react-router-bootstrap\";\n// https://react-bootstrap.github.io/components/navbar/\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nconst NavBar = () => {\n  return (\n    <header>\n      <Navbar\n        collapseOnSelect\n        bg=\"dark\"\n        variant=\"dark\"\n        expand=\"xl\"\n        fixed=\"top\"\n      >\n        <Navbar.Toggle className=\"ml-5\" aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav className=\"ml-5\">\n            <LinkContainer exact to=\"/\">\n              <Nav.Link>Home</Nav.Link>\n            </LinkContainer>\n            <LinkContainer exact to=\"/Quote-Machine\">\n              <Nav.Link>Quote Machine</Nav.Link>\n            </LinkContainer>\n            <LinkContainer exact to=\"/Markdown-Previewer\">\n              <Nav.Link>Markdown Previewer</Nav.Link>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n// https://react-bootstrap.github.io/components/jumbotron/\nimport { Button, Jumbotron } from \"react-bootstrap\";\n// https://react-icons.netlify.com/#/\nimport { FaFreeCodeCamp } from \"react-icons/fa\";\n\nconst Home = () => {\n  return (\n    <section className=\"d-flex flex-column h-100 align-items-center justify-content-center text-center\">\n      <Jumbotron className=\"my-5 overflow-auto\">\n        <h1 className=\"display-4\">Welcome!</h1>\n        <p className=\"my-5\">\n          Thanks for checking out my spin on the{\" \"}\n          <a href=\"https://www.freecodecamp.org/\">freecodecamp.org</a> Front End\n          Libraries Projects.\n        </p>\n        <a href=\"https://www.freecodecamp.org/mshuber1981\">\n          <Button variant=\"dark\" size=\"lg\">\n            <FaFreeCodeCamp className=\"mr-2\" /> FCC Profile\n          </Button>\n        </a>\n      </Jumbotron>\n    </section>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n// https://react-bootstrap.github.io/components/jumbotron/\nimport { Button, Jumbotron } from \"react-bootstrap\";\n// https://react-redux.js.org/api/hooks#using-hooks-in-a-react-redux-app\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRandomQuotes, quotesSelector } from \"./quotesSlice\";\n// https://react-icons.netlify.com/#/\nimport { FaTwitterSquare } from \"react-icons/fa\";\n\nconst Quotes = () => {\n  const dispatch = useDispatch();\n  const { quote, author, loading, hasErrors } = useSelector(quotesSelector);\n\n  if (loading) return <h2>Loading Quotes...</h2>;\n  if (hasErrors) return <h2>Something went wrong...</h2>;\n\n  return (\n    <div className=\"d-flex flex-column h-100 align-items-center justify-content-center text-center\">\n      <Jumbotron id=\"quote-box\" className=\"my-5 overflow-auto\">\n        <blockquote>\n          <p id=\"text\" className=\"h5 overflow-auto\">\n            {quote}\n          </p>\n          <footer id=\"author\" className=\"my-4\">\n            â€” {author}\n          </footer>\n        </blockquote>\n\n        <Button\n          id=\"new-quote\"\n          variant=\"dark\"\n          onClick={() => dispatch(getRandomQuotes())}\n        >\n          Random Quote\n        </Button>\n        <a\n          id=\"tweet-quote\"\n          className=\"d-block mt-4 h1 text-dark\"\n          href={`https://twitter.com/intent/tweet?text=\"${quote}\"%20-%20${author}`}\n        >\n          <FaTwitterSquare />\n        </a>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Quotes;\n","import React from \"react\";\nimport Quotes from \"../features/quotes/Quotes\";\n\nconst QuoteMAchine = () => {\n  return (\n    <section className=\"h-100\">\n      <Quotes />\n    </section>\n  );\n};\n\nexport default QuoteMAchine;\n","// https://redux-toolkit.js.org/api/createSlice#createslice\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst placeholder = `\r\n# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://techchronos.com/wp-content/uploads/SszarkLabs/stack-icon/cywBkaGwkMeDAuJbSt1k.png)\r\n`;\r\n\r\nexport const markdownSlice = createSlice({\r\n  name: \"markdown\",\r\n  initialState: {\r\n    markdown: placeholder,\r\n  },\r\n  reducers: {\r\n    handleMarkdownChange: (state, { payload }) => {\r\n      state.markdown = payload.target.value;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { handleMarkdownChange } = markdownSlice.actions;\r\n\r\nexport const markdownSelector = (state) => state.markdown;\r\n\r\nexport default markdownSlice.reducer;\r\n","import React from \"react\";\n// https://www.npmjs.com/package/marked\nimport marked from \"marked\";\n// https://react-bootstrap.github.io/layout/grid/#responsive-grids\nimport {Row, Col} from \"react-bootstrap\"\n// https://react-redux.js.org/api/hooks#using-hooks-in-a-react-redux-app\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { handleMarkdownChange, markdownSelector } from \"./markdownSlice\";\n\nconst Markdown = () => {\n  marked.setOptions({\n    breaks: true,\n  });\n\n  const dispatch = useDispatch();\n  const { markdown } = useSelector(markdownSelector);\n\n  return (\n      <Row className=\"h-100\">\n      <Col className=\"markdown bg-light\" lg={6} >\n      <textarea\n        id=\"editor\"\n        className=\"h-100 w-100 my-5\"\n        onChange={(event) => dispatch(handleMarkdownChange(event))}\n        type=\"text\"\n        value={markdown}\n      />\n      </Col>\n      <Col className=\"bg-light\" lg={6} >\n      <div\n        id=\"preview\"\n        className=\"mt-5 pt-5\"\n        dangerouslySetInnerHTML={{\n          __html: marked(markdown),\n        }}\n      />\n      </Col>\n    </Row>\n    \n    \n  );\n};\n\nexport default Markdown;\n","import React from \"react\";\nimport Markdown from \"../features/markdown/Markdown\";\n\nconst MarkdownPrev = () => {\n  return (\n    <section className=\"h-100\">\n      <Markdown />\n    </section>\n  );\n};\n\nexport default MarkdownPrev;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"d-flex flex-column vh-100 align-items-center justify-content-center text-white\">\n        Sorry, page not found.\n      </h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\n// https://reactrouter.com/web/guides/quick-start\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport QuoteMachine from \"../pages/QuoteMachine\";\nimport MarkdownPrev from \"../pages/MarkdownPrev\";\nimport NotFound from \"../pages/NotFound\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/Quote-Machine\" component={QuoteMachine} />\n      <Route exact path=\"/Markdown-Previewer\" component={MarkdownPrev} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\n// https://react-icons.netlify.com/#/\nimport { FaLinkedin, FaGithubSquare, FaFreeCodeCamp } from \"react-icons/fa\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"d-flex flex-column align-items-center fixed-bottom bg-dark\">\n      <div className=\"h1 d-inline my-2\">\n        <a\n          href=\"https://www.linkedin.com/in/michael-huber-9b567a173\"\n          className=\"text-white\"\n        >\n          <FaLinkedin />\n        </a>\n        <a\n          href=\"https://www.freecodecamp.org/mshuber1981\"\n          className=\"mx-5 text-white\"\n        >\n          <FaFreeCodeCamp />\n        </a>\n        <a href=\"https://github.com/mshuber1981\" className=\"text-white\">\n          <FaGithubSquare />\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchQuotes } from \"./features/quotes/quotesSlice\";\nimport NavBar from \"./components/NavBar\";\nimport Routes from \"./components/Routes\";\nimport Footer from \"./components/Footer\"\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchQuotes());\n  }, [dispatch]);\n\n  return (\n    <>\n      <NavBar />\n      <main className=\"container-fluid h-100 bg-secondary overflow-auto\">\n        <Routes />\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","// https://redux-toolkit.js.org/api/configureStore#configurestore\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport quotesReducer from \"../features/quotes/quotesSlice\";\r\nimport markdownReducer from \"../features/markdown/markdownSlice\";\r\n\r\nexport default configureStore({\r\n  // https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [\"markdown/handleMarkdownChange\"]\r\n    }\r\n  }),\r\n  reducer: {\r\n    quotes: quotesReducer,\r\n    markdown: markdownReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// https://reactrouter.com/web/guides/quick-start (using HashRouter so custom 404 will work with GitHub Pages)\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport store from \"./app/store\";\n// https://redux.js.org/tutorials/essentials/part-1-overview-concepts\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}